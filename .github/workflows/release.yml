name: Release Build

on:
  push:
    branches:
      - magic

jobs:
  build-release:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: magic
          fetch-depth: 0

      - name: add google-services.json
        run: echo ${{ secrets.GOOGLE_SERVICES_JSON }} | base64 -d > app/google-services.json

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Add signing properties
        env:
          SIGNING_PROPERTIES: ${{ secrets.SIGNING_PROPERTIES }}
        run: |
          echo ${{ secrets.SIGNING_PROPERTIES }} > encoded_signing_properties
          base64 -d encoded_signing_properties > signing.properties

      - name: Add jks file
        run: |
          echo ${{ secrets.SIGN_KEY }} > ./encoded_key
          base64 -d encoded_key > key.jks

      - name: Build apk
        run: ./gradlew assembleRelease

      - name: Read release apk output metadata
        id: apk-meta-release
        uses: juliangruber/read-file-action@v1
        with:
          path: app/build/outputs/apk/release/output-metadata.json

      - name: Parse release info
        id: release-info
        run: |
          echo "release_info_version_code=${{ fromJson(steps.apk-meta-release.outputs.content).elements[0].versionCode }}" >> $GITHUB_ENV
          echo "release_info_version_name=${{ fromJson(steps.apk-meta-release.outputs.content).elements[0].versionName }}" >> $GITHUB_ENV
          echo "release_info_apk_filename=${{ fromJson(steps.apk-meta-release.outputs.content).elements[0].outputFile }}" >> $GITHUB_ENV

      - name: Get current time
        id: date
        run: echo "current_time=$(date +'%Y-%m-%d_%H:%M:%S')" >> $GITHUB_ENV

      - name: Zip release outputs
        uses: vimtor/action-zip@v1.1
        with:
          files: app/build/outputs
          dest: BV_${{ env.release_info_version_code }}_${{ env.release_info_version_name }}_${{ env.current_time }}.zip

      - name: Archive release build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Release build artifact
          path: app/build/outputs/apk/release/${{ env.release_info_apk_filename }}

      - name: Archive release build mappings
        uses: actions/upload-artifact@v3
        with:
          name: Release build mappings
          path: app/build/outputs/mapping/release
